name: Release

on:
  release:
    types: [published]

jobs:

  # A job to bundle the package contents into a tar.gz and upload them to the release
  bundle:
    runs-on: ubuntu-latest
    env:
      TAR_OUTPUT_PATH: DeveloperConsole_${{ github.event.release.tag_name }}.tar.gz
    steps:
    - uses: actions/checkout@v2 # Checkout the repository
    
    # Compress the package contents into a tar.gz file
    - run: tar -czvf "${{ env.TAR_OUTPUT_PATH }}" "console/Packages/com.cronyx.console"
        
    # Upload the tar.gz file to the release, using the upload URL
    # of the release that triggered this workflow
    - name: "Upload package tar.gz"
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: ./${{ env.TAR_OUTPUT_PATH }}
        asset_name: ${{ env.TAR_OUTPUT_PATH }}
        asset_content_type: application/gzip
    
  # A job to handle synchronizing the upm branch with the current release
  upm:
    needs: bundle
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2 # Checkout the repository
    
    # Push the package root directory to the 'upm' branch
    - uses: s0/git-publish-subdir-action@develop
      env:
        REPO: self
        BRANCH: upm
        FOLDER: console/Packages/com.cronyx.console
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        
     # Afterwards, change the git tag to reference the 'upm' branch
    - run: |
        git fetch
        git checkout upm
        git push origin -d ${{ github.event.release.tag_name }} # Delete old tag on remote
        git tag -d "${{ github.event.release.tag_name }}" # Delete tag that was created with the new release
        
        # Move main README file into the upm branch
        git checkout origin/main README.md
        git commit -m "Update upm README file"
        git push
        
        git tag "${{ github.event.release.tag_name }}" # Create new tag references 'upm' branch
        git push --tags # Push new tag
        
    # After having deleted the old tag that was originally associated with the release that
    # triggered this workflow, that release will now be marked as a draft release and must be republished.
    - uses: eregon/publish-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        release_id: ${{ github.event.release.id }}
